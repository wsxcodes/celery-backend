services:
  eternyiq-api:
    build: .
    container_name: eternyiq-api
    ports:
      - 8880:8880
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    environment:
      - TZ=Europe/Prague
    volumes:
      - ./data:/code/data
    command:
      - /bin/sh
      - -c
      - |
        scripts/run-worker.sh &
        exec gunicorn --worker-class uvicorn.workers.UvicornWorker \
          --workers ${NEURAL_API_WORKERS:-1} \
          --bind 0.0.0.0:8880 \
          backend.main:app
    healthcheck:
      interval: 10s
      timeout: 5s
      retries: 5

  eternyiq-rabbitmq:
    image: rabbitmq:latest
    container_name: eternyiq-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST}
      - RABBITMQ_NODENAME=rabbit@eternyiq-rabbitmq
      - RABBITMQ_MNESIA_DIR=/var/lib/rabbitmq/mnesia
      - RABBITMQ_LOG_DIR=/var/lib/rabbitmq/log
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./data/rabbitmq_data:/var/lib/rabbitmq
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./scripts/init_rabbitmq.sh:/docker-entrypoint-init.d/init_rabbitmq.sh
      - ./scripts/enable_stable_flags.sh:/docker-entrypoint-init.d/enable_stable_flags.sh
    user: "0:0"
    command: >
      bash -c "chmod +x /docker-entrypoint-init.d/init_rabbitmq.sh /docker-entrypoint-init.d/enable_stable_flags.sh &&
            /docker-entrypoint-init.d/init_rabbitmq.sh &&
            /docker-entrypoint-init.d/enable_stable_flags.sh &&
            rabbitmq-server"

  eternyiq-redis:
    image: redis:latest
    container_name: eternyiq-redis
    environment:
      - TZ=Europe/Prague
      - REDIS_PASSWORD
    ports:
      - "6379:6379"
    command:
      - "redis-server"
      - "--requirepass"
      - "${REDIS_PASSWORD}"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "redis-cli", "-a ${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - ./data/redis_data:/data
      - ./config/redis.conf.template:/usr/local/etc/redis/redis.conf.template
    user: "0:0"

  eternyiq-flower:
    build: .
    container_name: eternyiq-flower
    command: /usr/local/bin/celery -A backend.core.celery flower --broker=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@${RABBITMQ_HOST}:5672/${RABBITMQ_VHOST} --broker_api=http://${RABBITMQ_USER}:${RABBITMQ_PASS}@${RABBITMQ_HOST}:15672/api/ --basic_auth=${RABBITMQ_USER}:${RABBITMQ_PASS}
    ports:
      - "5555:5555"
    env_file:
      - .env
    environment:
      - TZ=Europe/Prague
      - FLOWER_BASIC_AUTH=${RABBITMQ_USER}:${RABBITMQ_PASS}
      - CELERY_BROKER_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@${RABBITMQ_HOST}:5672/${RABBITMQ_VHOST}
      - PYTHONPATH=/code
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "3"

volumes:
  data_volume: {}
  cert_volume: {}
