{
  "version": "v3",
  "documentType": {
    "passport": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the person described in the passport. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "documentId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The passport number."
          },
          "birthDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The date of birth of the person on the passport."
          },
          "sex": {
            "type": "STRING",
            "nullable": true,
            "displayType": "dropdown",
            "enum": ["F", "M", "X"],
            "options": [
              { "label": "Men", "value": "M" },
              { "label": "Women", "value": "F" },
              { "label": "Other", "value": "X" }
            ],
            "description": "The sex or gender of the person on the passport."
          },
          "personalNumber": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The personal number of the person on the drivers licence."
          },
          "issueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The date of issuing the passport."
          },
          "expirationDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The expiration date of the passport."
          }
        },
        "required": [
          "fullname",
          "documentId",
          "sex",
          "personalNumber",
          "birthDate",
          "issueDate",
          "expirationDate"
        ]
      },
      "extractionQuery": "You extract personal information from a image of the personal information page in a passport. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of the personal information page in a passport."
    },
    "national_id": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The full name of the person described in the national id. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "birthDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The date of birth of the person in the national id."
          },
          "sex": {
            "type": "STRING",
            "nullable": true,
            "displayType": "dropdown",
            "enum": ["F", "M", "X"],
            "options": [
              { "label": "Men", "value": "M" },
              { "label": "Women", "value": "F" },
              { "label": "Other", "value": "X" }
            ],
            "description": "The sex or gender of the person in the national id."
          },
          "documentId": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The national id card number."
          },
          "issueDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The date of issuing the national id."
          },
          "expirationDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The expiration date of the national id."
          }
        },
        "required": [
          "fullname",
          "birthDate",
          "sex",
          "documentId",
          "issueDate",
          "expirationDate"
        ]
      },
      "extractionQuery": "You extract personal information from a image or a pdf of a national id card. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of a national id card."
    },
    "driver_license": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The full name of the person described on the drivers licence. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "birthDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The date of birth of the person on the drivers licence."
          },
          "documentId": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The idetification number of the drivers licence. For Czech drivers licences it is located in the 5th row."
          },
          "personalNumber": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The personal number of the person on the drivers licence."
          },
          "issueDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The date of issuing of the drivers licence."
          },
          "expirationDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The expiration date of the drivers licence."
          }
        },
        "required": [
          "fullname",
          "birthDate",
          "documentId",
          "personalNumber",
          "issueDate",
          "expirationDate"
        ]
      },
      "extractionQuery": "You extract personal information from a image or a pdf of a drivers licence. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of a drivers licence."
    },
    "visa": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "visaType": {
            "type": "STRING",
            "nullable": true,
            "description": "The type of the visa.",
            "displayType": "text"
          },
          "documentId": {
            "type": "STRING",
            "nullable": true,
            "description": "The visa number.",
            "displayType": "text"
          },
          "issueDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The date of issuing the visa."
          },
          "expirationDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "date",
            "description": "The expiration date of the visa."
          }
        },
        "required": ["visaType", "documentId", "issueDate", "expirationDate"]
      },
      "extractionQuery": "You extract personal information from a image or a pdf of a visa. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of a visa."
    },
    "birth_certificate": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the person described in the birth certificate. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "birthDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The date of birth of the person in the birth certificate."
          },
          "personalNumber": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The personal number of the person in the birth certificate."
          },
          "issueOrganization": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The organization that issued the birth certificate."
          }
        },
        "required": [
          "fullname",
          "birthDate",
          "personalNumber",
          "issueOrganization"
        ]
      },
      "extractionQuery": "You extract personal information from a image of a pdf of a birth certificate. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of a birth certificate."
    },
    "marriage_certificate": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname_partner_one": {
            "displayType": "text",
            "type": "STRING",
            "nullable": true,
            "description": "The full name of the first partner in the marriage certificate.. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "fullname_partner_two": {
            "displayType": "text",
            "type": "STRING",
            "nullable": true,
            "description": "The full name of the second partner in the marriage certificate.. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "date": {
            "displayType": "date",
            "type": "STRING",
            "nullable": true,
            "description": "The date of wedding stated on the marrige certificate."
          },
          "documentId": {
            "displayType": "text",
            "type": "STRING",
            "nullable": true,
            "description": "The document number of the marrige certificate."
          },
          "issueOrganization": {
            "displayType": "text",
            "type": "STRING",
            "nullable": true,
            "description": "The organization that issued the birth certificate."
          }
        },
        "required": [
          "fullname_partner_one",
          "fullname_partner_two",
          "marrigeDate",
          "documentId",
          "issueOrganization"
        ]
      },
      "extractionQuery": "You extract personal information from a image of a pdf of a marrige certificate. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of a marrige certificate."
    },
    "divorce_papers": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname_partner_one": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the first partner in the divorce papers. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "fullname_partner_two": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the second partner in the divorce papers. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "date": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The date of divorce stated in the divorce papers."
          }
        },
        "required": [
          "fullname_partner_one",
          "fullname_partner_two",
          "divorceDate"
        ]
      },
      "extractionQuery": "You extract personal information from a image of a pdf of a divorce papers. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of a divorce papers."
    },
    "diploma": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the diploma holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "type": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The obtained certification or degree."
          },
          "issueDate": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The date when the diploma or certification was issued."
          },
          "issueOrganization": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The organization that issued the diploma or certification."
          }
        },
        "required": ["fullname", "type", "issueDate", "issueOrganization"]
      },
      "extractionQuery": "You extract personal information from a image of a pdf of a diploma or certification. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of a diploma or certification."
    },
    "social_security_number": {
      "category": ["identity", "family"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the holder of the social security card. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "personalNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The social security number on the card."
          }
        },
        "required": ["fullname", "personalNumber"]
      },
      "extractionQuery": "You extract personal information from a image or a pdf of a social security card. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image of social security card."
    },
    "electricity_bill": {
      "category": ["liabilities", "real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the electricity bill account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The location of the building that the electricity bill is assigned to. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Supplier of the utility."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The due date of the next payment."
          }
        },
        "required": [
          "fullname",
          "propertyAddress",
          "companyName",
          "contractId",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf of a electricity bill. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a pdf of a electricity bill."
    },
    "gas_bill": {
      "category": ["liabilities", "real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the gas bill account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The location of the building that the gas bill is assigned to. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Supplier of the utility."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The due date of the next payment."
          }
        },
        "required": [
          "fullname",
          "propertyAddress",
          "companyName",
          "contractId",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf of a gas bill. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a pdf of a gas bill."
    },
    "water_bill": {
      "category": ["liabilities", "real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the water bill account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The location of the building that the water bill is assigned to. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Supplier of the utility."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The due date of the next payment."
          }
        },
        "required": [
          "fullname",
          "propertyAddress",
          "companyName",
          "contractId",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf of a water bill. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a pdf of a water bill."
    },
    "internet_bill": {
      "category": ["liabilities", "real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the internet bill account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The location of the building that the internet bill is assigned to. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Supplier of the telecomunication services."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The due date of the next payment."
          }
        },
        "required": [
          "fullname",
          "propertyAddress",
          "companyName",
          "contractId",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf of a internet bill. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a pdf of a internet bill."
    },
    "phone_bill": {
      "category": ["liabilities"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the phone bill account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The location of the building that the phone bill is assigned to if any. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Supplier of the telecomunication services."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The due date of the next payment."
          }
        },
        "required": [
          "fullname",
          "propertyAddress",
          "companyName",
          "contractId",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf of a phone bill. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a pdf of a phone bill."
    },
    "tv_subscription": {
      "category": ["liabilities"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the tv subscription account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The location of the building that tv subscription bill is assigned to. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Supplier of the tv subscription."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The due date of the next payment."
          }
        },
        "required": [
          "fullname",
          "propertyAddress",
          "companyName",
          "contractId",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf of a tv subscription bill. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a pdf of a tv subscription bill."
    },
    "social_media_subscription_bill": {
      "category": ["liabilities"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the social media subscription account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Supplier of the social media subscription account."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The due date of the next payment."
          }
        },
        "required": ["fullname", "companyName", "contractId", "dueDate"]
      },
      "extractionQuery": "You extract information from a image or a pdf of a social media subscription bill. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a pdf of a social media subscription bill."
    },
    "bank_account_contract": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the bank account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "accountNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Account number of the bank account."
          },
          "bankName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the bank."
          },
          "iban": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The IBAN/SWIFT account number."
          }
        },
        "required": ["fullname", "accountNumber", "bankName", "iban"]
      },
      "extractionQuery": "You extract information from a image or a pdf containing bank account contract. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf containing bank account contract.."
    },
    "credit_card_contract": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the bank account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "accountNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Account number of the bank account."
          },
          "creditCardNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Credit card number of the credit catrd."
          },
          "bankName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the bank."
          },
          "iban": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The IBAN/SWIFT account number."
          }
        },
        "required": [
          "fullname",
          "accountNumber",
          "creditCardNumber",
          "bankName",
          "iban"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf containing a credit card contract. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf containing a credit card contract."
    },
    "credit_card": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the bank account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "creditCardNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Credit card number of the credit catrd."
          },
          "bankName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the bank."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the credit or debit card provider."
          },
          "expirationDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The expiration date of the credit card. Expand the date to dd-mm-yyyy format, where dd is the last day of the month written on the credit or debit card."
          }
        },
        "required": [
          "fullname",
          "creditCardNumber",
          "bankName",
          "companyName",
          "expirationDate"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf of a credit or debit card. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf of a credit or debit card."
    },
    "investment_account_contract": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the investment account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "accountNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Account number of the investment account."
          },
          "bankName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the bank."
          },
          "iban": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The IBAN/SWIFT account number."
          }
        },
        "required": ["fullname", "accountNumber", "bankName", "iban"]
      },
      "extractionQuery": "You extract information from a image or a pdf investment account contract. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf investment account contract."
    },
    "investment_contract": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the investment account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "accountType": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Type of investment account."
          },
          "bankName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the bank."
          },
          "accountNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Account number of the investment account."
          },
          "investmentContract": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Investment contract linked to the investment account."
          }
        },
        "required": [
          "fullname",
          "accountNumber",
          "accountType",
          "investmentContract",
          "bankName"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf containing information about a investment account. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf containing information about a investment account."
    },
    "investment_app": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the investment account holder on the investment app. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "appName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Name of the investment app."
          },
          "accountType": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Type of account on the investment app."
          },
          "accountNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Account number of the account on the investment app."
          },
          "investmentContract": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Investment contract linked to the account on the investment app."
          }
        },
        "required": [
          "fullname",
          "accountNumber",
          "accountType",
          "investmentContract",
          "appName"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf containing information about a investment app. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf containing information about a investment app."
    },
    "retirement_savings_contract": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the retirement account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "accountNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Account number of the retirement account."
          },
          "fundName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of retirement account or fund."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the bank or company providing the retirement account."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "dates",
            "nullable": true,
            "description": "The repayment terms date for the retirement account."
          }
        },
        "required": [
          "fullname",
          "accountNumber",
          "fundName",
          "companyName",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from a image or a pdf containing retirement account contract. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf containing retirement account contract."
    },
    "retirement_employer_contribution_document": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the employee. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "employer": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name or company name of the employer."
          },
          "amount": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The total amount contributed by the employer."
          }
        },
        "required": ["fullname", "employer", "amount"]
      },
      "extractionQuery": "You extract information from a image or a pdf containing employer retirement contribution document. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf containing employer retirement contribution document."
    },
    "retirement_account_annual_statement": {
      "category": ["financial"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the retirement account holder. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "year": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The year of the retirement account annual statement."
          },
          "amount": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The total amount left in the retirement account."
          }
        },
        "required": ["fullname", "year", "amount"]
      },
      "extractionQuery": "You extract information from a image or a pdf containing retirement account annual statement. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf containing retirement account annual statement."
    },
    "property_deed": {
      "category": ["real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "nullable": true,
            "displayType": "text",
            "description": "The full name of the property owner. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The address of the property. Include the street, house number, city and zip code in that order."
          },
          "cadastreNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Cadastre number of the property."
          }
        },
        "required": ["fullname", "propertyAddress", "cadastreNumber"]
      },
      "extractionQuery": "You extract information from a image or a pdf of a property deed. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf of a property deed."
    },
    "buyers_agreement": {
      "category": ["real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "seller": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name or company name of the property seller. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "buyer": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name or company name of the property buyer. Construct the full name by concatenating the first name and last name of in that order. Full name should be formated with capital letters only at the begining of first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The address of the property. Include the street, house number, city and zip code in that order."
          },
          "date": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The date of the buyers agreement."
          },
          "contractId": {
            "type": "STRING",
            "nullable": true,
            "description": "The contract id of the buyers agreement."
          }
        },
        "required": ["seller", "buyer", "cadastreNumber", "date", "contractId"]
      },
      "extractionQuery": "You extract information from a image or a pdf of a buyers agreement of a property. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is a image or a image or a pdf of a buyers agreement of a property."
    },
    "confirmation_of_membership_in_cooperative": {
      "category": ["real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the property owner. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The address of the property. Include the street, house number, city, and zip code in that order."
          },
          "cooperativeName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the cooperative."
          }
        },
        "required": ["fullname", "propertyAddress", "cooperativeName"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a confirmation of membership in the cooperative. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a confirmation of membership in the cooperative."
    },
    "confirmation_of_debt_free_status_towards_cooperative": {
      "category": ["real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a confirmation of debt-free status towards the cooperative. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a confirmation of debt-free status towards the cooperative."
    },
    "confirmation_of_anuity": {
      "category": ["real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a confirmation of the annuity. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a confirmation of the annuity."
    },
    "rental_agreement": {
      "category": ["real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "renter": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the property renter. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "tenant": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the property tenant. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "contractExpirationDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Expiration date of the contract."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Due date of the rent."
          }
        },
        "required": [
          "renter",
          "tenant",
          "contractId",
          "contractExpirationDate",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of a rental agreement. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a rental agreement."
    },
    "own_rental_agreement": {
      "category": ["real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "renter": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the property renter. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "tenant": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the property tenant. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The contract id."
          },
          "contractExpirationDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Expiration date of the contract."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Due date of the rent."
          }
        },
        "required": [
          "renter",
          "tenant",
          "contractId",
          "contractExpirationDate",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of an own rental agreement. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of an own rental agreement."
    },
    "technical_document": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the vehicle owner. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "registrationNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Registration number of the vehicle."
          },
          "date": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Date of the technical document."
          },
          "expirationDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Expiration date of the technical document."
          }
        },
        "required": ["fullname", "registrationNumber", "date", "expirationDate"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a car-related technical document. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a car-related technical document."
    },
    "technical_check_up": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the vehicle owner. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "registrationNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Registration number of the vehicle."
          },
          "date": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Date of the technical check-up document."
          },
          "expirationDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Expiration date of the technical check-up document."
          }
        },
        "required": ["fullname", "registrationNumber", "date", "expirationDate"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a car-related technical check-up. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a car-related technical check-up."
    },
    "life_insurance_contract": {
      "category": ["insurance"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the insured person. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "insuranceNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Insurance number."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Name of the insurance company."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Due date of the insurance payment."
          }
        },
        "required": ["fullname", "insuranceNumber", "companyName", "dueDate"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a life insurance contract. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a life insurance contract."
    },
    "life_insurance_claim": {
      "category": ["insurance"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the insured person. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "insuranceNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Insurance number."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Name of the insurance company."
          }
        },
        "required": ["fullname", "insuranceNumber", "companyName"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a life insurance claim. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a life insurance claim."
    },
    "home_insurance_contract": {
      "category": ["insurance"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the insured person. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The address of the insured property. Include the street, house number, city and zip code in that order.."
          },
          "insuranceNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Insurance number."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Name of the insurance company."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Due date of the insurance payment."
          }
        },
        "required": [
          "fullname",
          "insuranceNumber",
          "propertyAddress",
          "companyName",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of a home insurance contract. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a home insurance contract."
    },
    "proof_of_property_ownership_transfer": {
      "category": ["real-estate"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a proof of property ownership transfer. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a proof of property ownership transfer."
    },
    "car_insurance_contract": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the insured person. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "registrationNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Registration number of the vehicle."
          },
          "insuranceNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Insurance number."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Name of the insurance company."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Due date of the insurance payment."
          }
        },
        "required": [
          "fullname",
          "registrationNumber",
          "insuranceNumber",
          "companyName",
          "dueDate"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of a car insurance document. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a car insurance document."
    },
    "vehicle_registration": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the vehicle owner. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "vin": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The vehicles vehecile identification number or VIN."
          },
          "documentId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Associated technical document id."
          },
          "vehicleType": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The type of the vehicle."
          },
          "licencePlate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The licence plate of the vehicle."
          }
        },
        "required": [
          "fullname",
          "vin",
          "documentId",
          "vehicleType",
          "licencePlate"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of a vehicle registration document. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a vehicle registration document."
    },
    "vehicle_leasing_contract": {
      "category": ["liabilities"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the vehicle owner. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "vehicleType": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The type of the vehicle."
          },
          "documentId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The leasing contract number."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The repayment date in the contract."
          },
          "amount": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The amount payed each repayment."
          }
        },
        "required": [
          "fullname",
          "vehicleType",
          "documentId",
          "dueDate",
          "amount"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of a vehicle leasing contract. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a vehicle leasing contract."
    },
    "disability_long_term_care_insurance_contract": {
      "category": ["insurance"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the insured person. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "insuranceNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Insurance number."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Name of the insurance company."
          },
          "expirationDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "The expiration date of the insurance."
          }
        },
        "required": [
          "fullname",
          "insuranceNumber",
          "companyName",
          "expirationDate"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of a disability or long-term care insurance contract. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a disability or long-term care insurance contract."
    },
    "disability_long_term_care_insurance_claim": {
      "category": ["insurance"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the insured person. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "insuranceNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Insurance number."
          },
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Name of the insurance company."
          }
        },
        "required": ["fullname", "insuranceNumber", "companyName"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a disability or long-term care insurance claim. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a disability or long-term care insurance claim."
    },
    "disability_recognition_decision": {
      "category": ["insurance"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the disabled person. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "date": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The date of the recognition decision."
          },
          "doctor": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the issuing doctor. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names. Include all academic titles in the name."
          }
        },
        "required": ["fullname", "date", "doctor"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a disability recognition decision by a doctor. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a disability recognition decision by a doctor."
    },
    "loan_contract": {
      "category": ["liabilities"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the borrower. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Contract id of the loan contract."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Due date of the loan payment."
          }
        },
        "required": ["fullname", "contractId", "dueDate"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a loan contract. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a loan contract."
    },
    "tax_return": {
      "category": ["liabilities"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the person fifiling the tax return. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "taxNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The personal or company tax identification number of the taxed subject."
          },
          "year": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The tax year."
          },
          "amount": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The total amount payed in taxes."
          }
        },
        "required": ["fullname", "taxNumber", "year", "amount"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a personal tax return document. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a personal tax return document."
    },
    "mortgage_contract": {
      "category": ["liabilities"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "fullname": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The full name of the borrower. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names."
          },
          "propertyAddress": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The address of the property. Include the street, house number, city and zip code in that order.."
          },
          "contractId": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Contract id of the mortgage contract."
          },
          "dueDate": {
            "type": "STRING",
            "displayType": "date",
            "nullable": true,
            "description": "Due date of the loan payment."
          }
        },
        "required": ["fullname", "propertyAddress", "contractId", "dueDate"]
      },
      "extractionQuery": "You extract information from an image or a pdf of a mortgage contract. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a mortgage contract."
    },
    "cryptocurrency_account": {
      "category": ["digital-assets"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a cryptocurrency account document. If some information is not available, set the JSON object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a cryptocurrency account document."
    },
    "type_of_collectible": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "name": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the valuable."
          },
          "amount": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The total financial value of the valuable."
          },
          "location": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The location of the valuable or instructions to find it."
          }
        },
        "required": ["fullname", "amount", "location"]
      },
      "extractionQuery": "You extract information from an image or a pdf related to the type of the collectible or detailing infomation of a valuable. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf related to the type of the collectible or detailing infomation of a valuable."
    },
    "description_and_appraisal_report": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "name": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the valuable."
          },
          "description": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The description of the valuable."
          },
          "amount": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The total financial value of the valuable."
          }
        },
        "required": ["fullname", "description", "amount"]
      },
      "extractionQuery": "You extract information from an image or a pdf related to the description and appraisal report of a collectible. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf related to the description and appraisal report of a collectible."
    },
    "purchase_receipt": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf related to a purchase receipt of a collectible. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf related to a purchase receipt of a collectible."
    },
    "appraisal_certificate": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "name": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the valuable."
          },
          "description": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The description of the valuable."
          },
          "amount": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The total financial value of the valuable."
          }
        },
        "required": ["fullname", "description", "amount"]
      },
      "extractionQuery": "You extract information from an image or a pdf related to an appraisal certificate of a collectible. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf related to an appraisal certificate of a collectible."
    },
    "insurance_policy": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf related to an insurance policy of a collectible. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf related to an insurance policy of a collectible."
    },
    "copyright_certificate": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a copyright certificate. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a copyright certificate."
    },
    "patent_document": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a patent document. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a patent document."
    },
    "licensing_agreement": {
      "category": ["personal-belongings"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a licensing agreement. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a licensing agreement."
    },
    "shareholder_agreement": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the company."
          },
          "registrationNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The registration number of the company."
          },
          "shareholderFullnames": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Coma-separated fullnames of the company shareholders or stakeholders. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names"
          }
        },
        "required": [
          "companyName",
          "registrationNumber",
          "shareholderFullnames"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of a shareholder agreement. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a shareholder agreement."
    },
    "company_founding_document": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the company."
          },
          "registrationNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The registration number of the company."
          },
          "shareholderFullnames": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "Coma-separated fullnames of the company shareholders or stakeholders. Construct the full name by concatenating the first name and last name in that order. Full name should be formatted with capital letters only at the beginning of the first and last names"
          }
        },
        "required": [
          "companyName",
          "registrationNumber",
          "shareholderFullnames"
        ]
      },
      "extractionQuery": "You extract information from an image or a pdf of a company founding document. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a company founding document."
    },
    "shareholder_paper": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of shareholder papers. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of shareholder papers."
    },
    "buy_sell_agreement": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a buy-sell agreement. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a buy-sell agreement in case of owners/founders/shareholders death."
    },
    "business_license": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a business license. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a business license."
    },
    "financial_statement": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a financial statement. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a company financial statement."
    },
    "company_tax_return": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {
          "companyName": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The name of the company."
          },
          "registrationNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The registration number of the company."
          },
          "taxNumber": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The company tax identification number of the taxed subject."
          },
          "year": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The tax year."
          },
          "amount": {
            "type": "STRING",
            "displayType": "text",
            "nullable": true,
            "description": "The total amount payed in taxes."
          }
        }
      },
      "extractionQuery": "You extract information from an image or a pdf of a tax return. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a company tax return."
    },
    "contract_and_agreement": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a contract or agreement (lease agreements, service contracts). If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a contract or agreement (lease agreements, service contracts)."
    },
    "certification_record": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a certification record. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a certification record."
    },
    "employee_contract": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of an employee or contractor contract. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of an employee or contractor contract."
    },
    "copyright_license": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of a copyright license. If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of a copyright license."
    },
    "employee_insurance": {
      "category": ["businesses"],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of employee insurance documents (bonuses for pension insurance, health insurance). If some information is not available, set the json object property to null.",
      "categorizationQuery": "The document is an image or a pdf of employee insurance documents."
    },
    "other": {
      "category": [
        "identity",
        "family",
        "financial",
        "miscellaneous",
        "personal-belongings",
        "insurance",
        "real-estate",
        "liabilities",
        "digital-assets",
        "businesses"
      ],
      "extractionSchema": {
        "type": "OBJECT",
        "properties": {}
      },
      "extractionQuery": "You extract information from an image or a pdf of employee insurance documents (bonuses for pension insurance, health insurance). If some information is not available, set the json object property to null.",
      "categorizationQuery": "Any image or a pdf of a document with no other category. If you are unsure about a category, select this one. If the image or a pdf unreadable, select this category."
    }
  }
}
